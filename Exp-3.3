// Base class
class Book {
  constructor(title, author) {
    this.title = title;
    this.author = author;
  }

  getDetails() {
    return `"${this.title}" by ${this.author}`;
  }
}

// Subclass: EBook (inherits from Book)
class EBook extends Book {
  constructor(title, author, fileSize) {
    super(title, author); // calls the parent constructor
    this.fileSize = fileSize;
  }

  getDetails() {
    // Overriding parent method
    return `${super.getDetails()} [File size: ${this.fileSize}MB]`;
  }
}

// Subclass: PrintedBook (inherits from Book)
class PrintedBook extends Book {
  constructor(title, author, pageCount) {
    super(title, author);
    this.pageCount = pageCount;
  }

  getDetails() {
    return `${super.getDetails()} [Pages: ${this.pageCount}]`;
  }
}

// --- Usage ---
const b1 = new Book("The Great Gatsby", "F. Scott Fitzgerald");
console.log(b1.getDetails()); 
// "The Great Gatsby" by F. Scott Fitzgerald

const b2 = new EBook("1984", "George Orwell", 5);
console.log(b2.getDetails()); 
// "1984" by George Orwell [File size: 5MB]

const b3 = new PrintedBook("To Kill a Mockingbird", "Harper Lee", 324);
console.log(b3.getDetails()); 
// "To Kill a Mockingbird" by Harper Lee [Pages: 324]
